3-1
import turtle  # 터틀 그래픽 모듈을 불러오는 작업
t=turtle.Turtle()  #거북이를 생성
t.shape('turtle')  #커서의 모양을 거북이 안에 circle를 입력하면 그리는 주체가 원형이됨

t.left(60) #왼쪽으로 60도회전
t.forward(100) #앞으로 100크기
t.left(60)
t.forward(100)
t.left(60)
t.forward(100)
t.left(60)
t.forward(100)
t.left(60)
t.forward(100)
t.left(60)
t.forward(100)

t.circle(100) #100크기의 원생성

3-2
#bool형 true, false 두가지 값을 나타내는 자료
a=3>2
print(a)

3-3
a=2>3
print(a)

print(type(a))

#논리연산자 not
b=not True
print(not True)
print(b)
b2=not 0
print(b2)

3-4
#산술연산 => 비교연산자=> 논리연산자
#and연산자 결과 True,False
#or연산자 결과 True,False
print("==")
print(10>2 and 20>3)
print(10>2 and 20<3)
print(10>2 or 20>3)
print(10>2 or 20<3)

3-5
#비교연산자 ==,!=,>,>=,<,<=
a=30
print(a == 10)
print(a !=10)

3-6
a="col'o'r"
b='co"lo"r'

print(a)
print(b)

3-7
# len() 문자열의 길이 반환
# 슬라이싱(skucecing) 전체에서 일부분을 참조
# str[start:end] 문자열 str에서 start 첨자에서 end-1 첨자까지 문자열 반환

str = 'Monty Python'
print(len(str))
print(str[0:5],str[0:3],str[6:],str[6:12])
print(str[-12:-7],str[-6:])

3-8
str =  input('다섯 문자 이상의 문자열 입력 >>')
print('입력 문자열:%s' %str)
print('입력 문자열 길이:%d' % len(str))
print("첫 문자: %c" %str[:1])
print("마지막 문자: %c" %str[-1:])
print("첫 문자를 제외한 부분 문자열: %s" %str[1:])
print("마지막 문자를 제외한 부분 문자열: %s" %str[:-1])
print("맨 앞과 뒤의 두 문자를 제외한 부분 문자열: %s" %str[2:-2])
print("문자 하나 씩을 건너뛴 부분 문자열: %s" %str[::2])
print("역 문자열: %s" %str[::-1])

3-9
str = 'Hello python!'
n=len(str)
print('문자열',str,'길이',n)
print('첫 문자',str[0],str[-n])
print('가운데 문자',str[n//2],str[-n//2],n//2,-n//2)
print('마지막 문자',str[n-1],str[-1])

3-10
#문자열[start:end:step]
#step 간격 생략되면 1글자
#음수일 경우 역순 문자열 반환

str = 'python'
print(str[0:4:2])
print(str[::3])
print(str[::-2])

3-11
#ord() 코드 번호 반환 (아스키 코드)
#chr() 해당 코드 번호의 문자 반환 (아스키 코드)
#\n 줄바꿈
st1='a'
a1=65
print(ord(st1))
print(chr(a1))
print('book\nbook')

3-12
#min() 최솟값을 반환하는 함수
#max() 최대값을 반환하는 함수

print('ipython')
print(min('ipython'))
print(max('ipython'))
print(min('ipython','java','html'))
print(max('ipython','java','html'))
print(min(3,96,4,13,40))
print(max(3,96,4,13,40))

3-13
#replace(old,new,count) 문자열 바꿔 반환하는 메소드
#옵션 count는 대체 횟수 지정
st='pythonpythonpython'
print(st)
print(st.replace('y','*'))
print(st.replace('y','*',1))
print(st.replace('y','*',2))
print(st.replace('a','*'))

3-14
value = input('실수(3자리,2자리로 345.78처럼)를 하나 입력하세요.>>')

num = value.replace('.','')

sum = 0
sum += int(num[0])
sum += int(num[1])
sum += int(num[2])
sum += int(num[3])
sum += int(num[4])

print('입력 값:',value)
print('반환 값:',num)
print(num[0])
print(num[1])
print('모든 자릿수 합:',sum)

3-15
#count() 문자열 출현 횟수를 반환

st1='welcome'
st2='단순한 것이 복잡한 것보다 낫다.'
num='12345'
print(st2.count('복잡'))
print(st1.count('e'))
print(st1.count('a'))
print(st2.count('것'))

print('->'.join(st1))
print(' '.join(num))
print('aa'.join(num))
print('a'.join(num))

3-16
#find() 문자열 찾는 메소드 없으면 -1을 반환
st1='python'
st2='자바 C 파이썬 코들린'
print(st1.find('h'))
print(st1.find('a'))
print(st2.find('자바'))
print(st2.find('파이'))
print(st2.find('파이썬'))

print(st1.index('h'))
print(st2.index('파이'))
print(st1.index('a'))
